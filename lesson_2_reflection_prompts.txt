*Working directory ist das Verzeichnis in dem ich Arbeite
*Staging area enthält die dateien aus dem working directory die ich verändert habe und für einen Commit markiert sind!
*Ein commit ist das absenden der Dateien aus der Staging area.
*Das Repository verwaltet die commits

git diff vergleicht working directory mit staging area
git diff --staged vergleicht staging area mit commit1
git diff commit1 commit2 vergleich die beiden commits aus dem repository


git branch listet alle branches eines repository auf
git branch NAME erstellt den namen
git checkout NAME wechselt auf den branch NAME
git log --graph --oneline BRANCH1 BRANCH2 zeigt ein diagramm der beiden Branches um zu sehen wo er entstanden ist
git merge BRANCH1 BRANCH2



What happens when you initialize a repository? Why do you need to do it?

    git init startet ein leeres repository in dem ordner wo man sich befindet den Ordner selbst man "working directory"


How is the staging area different from the working directory and the repository?
What value do you think it offers?

    git add fügt Dateien in die "Staging area", damit diese commitet werden können

How can you use the staging area to make sure you have one commit per logical
change?

	mann kann immer nur die Dateien aus dem working directory in die Staging area packen welche eine logische einheit bilden


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches sind gut für neue Features und Tests

How do the diagrams help you visualize the branch structure?

	Man sieht welcher Branch welche Commits enthält


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?



What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
	
